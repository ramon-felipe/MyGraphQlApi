// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyGraphQl.Infrastructure;

#nullable disable

namespace MyGraphQl.Infrastructure.Migrations
{
    [DbContext(typeof(MyGraphQlContext))]
    [Migration("20240206203130_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyGraphQl.Domain.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Processes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Process 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Process 2"
                        });
                });

            modelBuilder.Entity("MyGraphQl.Domain.ProcessUserMapping", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessId")
                        .HasColumnType("int");

                    b.Property<bool>("HasAccess")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "ProcessId");

                    b.HasIndex("ProcessId");

                    b.ToTable("ProcessUserMappings");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            ProcessId = 1,
                            HasAccess = true
                        },
                        new
                        {
                            UserId = 1,
                            ProcessId = 2,
                            HasAccess = false
                        },
                        new
                        {
                            UserId = 2,
                            ProcessId = 2,
                            HasAccess = true
                        });
                });

            modelBuilder.Entity("MyGraphQl.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 30,
                            LastName = "Arruda",
                            Name = "Ra"
                        },
                        new
                        {
                            Id = 2,
                            Age = 35,
                            LastName = "Laceranza",
                            Name = "Nah"
                        });
                });

            modelBuilder.Entity("MyGraphQl.Domain.ProcessUserMapping", b =>
                {
                    b.HasOne("MyGraphQl.Domain.Process", "Process")
                        .WithMany("UserProcesses")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGraphQl.Domain.User", "User")
                        .WithMany("UserProcesses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyGraphQl.Domain.Process", b =>
                {
                    b.Navigation("UserProcesses");
                });

            modelBuilder.Entity("MyGraphQl.Domain.User", b =>
                {
                    b.Navigation("UserProcesses");
                });
#pragma warning restore 612, 618
        }
    }
}
